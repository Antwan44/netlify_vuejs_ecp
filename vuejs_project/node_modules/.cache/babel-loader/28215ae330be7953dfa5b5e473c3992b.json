{"remainingRequest":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/babel-loader/lib/index.js!/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/eslint-loader/index.js??ref--13-0!/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/src/store/modules/User.js","dependencies":[{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/src/store/modules/User.js","mtime":1597697901025},{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/src/store/modules/User.js"],"names":["token","window","localStorage","getItem","state","user","users","UserById","EditUser","EraseUser","NewUser","getters","getUser","infoUserById","getAllUsers","getNewUser","NewCustomer","getEditUser","getEraseUser","actions","fetchUser","commit","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","catch","error","console","log","fetchUserById","id","fetchAllUsers","addUser","obj","formdata","FormData","firstname","lastname","phone","email","password","c_password","birthday","hiring_day","body","UpdateUser","raw","JSON","stringify","text","DeleteUser","mutations","AddUser"],"mappings":"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","sourcesContent":["const token = window.localStorage.getItem('token') || \"\";\n\n\nconst state= {\n\n    user:[],\n    users:[],\n    UserById:[],\n    EditUser:[],\n    EraseUser: [],\n    NewUser: [],\n\n\n}\n\nconst getters= {\n\n\n    getUser:(state) =>(state.user),\n    infoUserById:(state) =>(state.UserById),\n    getAllUsers:(state)=> (state.users),\n    getNewUser:(state)=> (state.NewCustomer),\n    getEditUser:(state) => (state.EditUser),\n    getEraseUser:(state) => (state.EraseUser)\n\n}\n\nconst actions= {\n\n\n\n      // FETCH USER\n      async fetchUser({commit}){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        \n        redirect: 'follow'\n        };\n\n        fetch(\"https://serene-plateau-70469.herokuapp.com/api/users/me\", requestOptions)\n        .then(response => response.json())\n        .then(result => commit('fetchUser',result))\n        .catch(error => console.log('error', error));\n            },\n\n\n// FETCH USER BY ID\nasync fetchUserById({commit},id){\n              var myHeaders = new Headers();\n              myHeaders.append(\"Authorization\", `Bearer ${token}`);\n  \n              var requestOptions = {\n              method: 'GET',\n              headers: myHeaders,\n              \n              redirect: 'follow'\n              };\n  \n              fetch(`https://serene-plateau-70469.herokuapp.com/api/users/${id}`, requestOptions)\n              .then(response => response.json())\n              .then(result => {\n                commit('UserById',result);\n\n              })\n              .catch(error => console.log('error', error));\n                  },\n\n\n    //FETCH ALL USERS\n async fetchAllUsers({commit}){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        \n        redirect: 'follow'\n        };\n\n        fetch(\"https://serene-plateau-70469.herokuapp.com/api/users\", requestOptions)\n        .then(response => response.json())\n        .then(result => commit('fetchAllUsers',result))\n        .catch(error => console.log('error', error));\n            },\n\n\n  //ADD A USER\n    async addUser({commit}, obj){\n\n      var myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar formdata = new FormData();\nformdata.append(\"firstname\", obj.firstname);\nformdata.append(\"lastname\", obj.lastname);\nformdata.append(\"phone\", obj.phone);\nformdata.append(\"email\", obj.email);\nformdata.append(\"password\", obj.password);\nformdata.append(\"c_password\", obj.c_password);\nformdata.append(\"birthday\", obj.birthday);\nformdata.append(\"hiring_day\", obj.hiring_day);\n\nvar requestOptions = {\nmethod: 'POST',\nheaders: myHeaders,\nbody: formdata,\nredirect: 'follow'\n};\n\nfetch(\"https://serene-plateau-70469.herokuapp.com/api/users\", requestOptions)\n.then(response => response.json())\n.then(result => commit('AddUser',result))\n.catch(error => console.log('error', error));\n},\n\n\n\n\n    //UPDATE USER BY ID\n\n    async UpdateUser({commit},user){\n\n        var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar raw = JSON.stringify({\n\n  \"firstname\": user.firstname,\n  \"lastname\": user.lastname,\n  \"phone\": user.phone,\n  \"email\": user.email,\n  \"password\": user.password,\n  \"c_password\": user.c_password,\n  \"birthday\": user.birthday,\n  \"hiring_day\": user.hiring_day,\n\n});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(`https://serene-plateau-70469.herokuapp.com/api/users/${user.id}`, requestOptions)\n  .then(response => response.text())\n  .then(result => commit('UpdateUser',result))\n  .catch(error => console.log('error', error));\n\n\n    },\n\n\n\n\n\n    //DELETE USER BY ID\n    async DeleteUser({commit},id){\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", `Bearer ${token}`);\n    \n    var requestOptions = {\n      method: 'DELETE',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    \n    fetch(`https://serene-plateau-70469.herokuapp.com/api/users/${id}`, requestOptions)\n      .then(response => response.text())\n      .then(result => commit('DeleteUser',result))\n      .catch(error => console.log('error', error));\n    }\n\n}\n\nconst mutations= {\n\n\nfetchUser:(state,user) =>(state.user = user),\nfetchAllUsers:(state,users)=>(state.users = users),\nUserById:(state,UserById)=>(state.UserById = UserById),\nAddUser:(state,NewUser)=>(state.NewUser = NewUser),\nUpdateUser: (state,EditUser)=>(state.EditUser = EditUser),\nDeleteUser: (state,EraseUser)=>(state.EraseUser = EraseUser)\n\n\n}\n\n\n\n\nexport default{\n    state,\n    getters,\n    actions,\n    mutations,\n}"]}]}
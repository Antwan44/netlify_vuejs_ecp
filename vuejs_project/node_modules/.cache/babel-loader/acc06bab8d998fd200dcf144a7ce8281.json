{"remainingRequest":"/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/node_modules/babel-loader/lib/index.js!/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/node_modules/eslint-loader/index.js??ref--13-0!/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/src/store/modules/Customer.js","dependencies":[{"path":"/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/src/store/modules/Customer.js","mtime":1597599598347},{"path":"/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/antwan/Rendu/Final_project/dev_and_go_ecp/ecp_vuex/src/store/modules/Customer.js"],"names":["token","window","localStorage","getItem","state","customers","CustomerById","NewCustomer","EraseCustomer","EditCustomer","getCords","getters","infoCustomerById","getAllCustomers","getNewCustomer","getEraseCustomer","getEditCustomer","getgetCords","actions","fetchCustomerById","id","commit","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","catch","error","console","log","fetchAllCustomers","addCustomer","obj","street_number","street_name","city","formdata","FormData","firstname","lastname","phone","email","results","geometry","location","lat","lng","zip_code","route_to_door","birthday","special_note","body","updateCustomer","customer","raw","JSON","stringify","text","DeleteCustomer","mutations","AddCustomer","UpdateCustomer","fetchCords"],"mappings":"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","sourcesContent":["const token = window.localStorage.getItem('token') || \"\";\n\n\nconst state= {\n\n    customers:[],\n    CustomerById:[],\n    NewCustomer: [],\n    EraseCustomer: [],\n    EditCustomer: [],\n    getCords: []\n\n}\n\nconst getters= {\n\n\n    infoCustomerById:(state) =>(state.CustomerById),\n    getAllCustomers:(state)=> (state.customers),\n    getNewCustomer:(state)=> (state.NewCustomer),\n    getEraseCustomer:(state)=> (state.EraseCustomer),\n    getEditCustomer:(state)=>(state.EditCustomer),\n    getgetCords:(state)=>(state.getCords)\n\n}\n\nconst actions= {\n\n\n// FETCH CUSTOMER BY ID\nasync fetchCustomerById({commit},id){\n              var myHeaders = new Headers();\n              myHeaders.append(\"Authorization\", `Bearer ${token}`);\n  \n              var requestOptions = {\n              method: 'GET',\n              headers: myHeaders,\n              \n              redirect: 'follow'\n              };\n  \n              fetch(`http://localhost:8000/api/customers/${id}`, requestOptions)\n              .then(response => response.json())\n              .then(result => {\n                commit('CustomerById',result);\n\n              })\n              .catch(error => console.log('error', error));\n                  },\n\n\n    //FETCH ALL CUSTOMERS\n async fetchAllCustomers({commit}){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        \n        redirect: 'follow'\n        };\n\n        fetch(\"http://localhost:8000/api/customers/\", requestOptions)\n        .then(response => response.json())\n        .then(result => commit('fetchAllCustomers',result))\n        .catch(error => console.log('error', error));\n            },\n\n\n\n\n\n    //ADD A CUSTOMER\n    async addCustomer({commit}, obj){\n \n      var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n\n  fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${obj.street_number}${obj.street_name}${obj.city}&key=AIzaSyCuhftDeP8710rA7n7ckpcrFguEAX-BsjA`, requestOptions)\n.then(response => response.json())\n.then(result => {\n  commit('fetchCords',result);\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", `Bearer ${token}`);\n  \n  var formdata = new FormData();\n  formdata.append(\"firstname\", obj.firstname);\n  formdata.append(\"lastname\", obj.lastname);\n  formdata.append(\"phone\", obj.phone);\n  formdata.append(\"email\", obj.email);\n  formdata.append(\"street_number\", obj.street_number);\n  formdata.append(\"street_name\", obj.street_name);\n  formdata.append(\"lat\", result.results[0].geometry.location.lat);\n  formdata.append(\"lng\", result.results[0].geometry.location.lng);\n  formdata.append(\"zip_code\", obj.zip_code);\n  formdata.append(\"city\", obj.city);\n  formdata.append(\"route_to_door\", obj.route_to_door);\n  formdata.append(\"birthday\", obj.birthday);\n  formdata.append(\"special_note\", obj.special_note);\n  \n  var requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: formdata,\n  redirect: 'follow'\n  };\n  \n  fetch(\"http://localhost:8000/api/customers\", requestOptions)\n  .then(response => response.json())\n  .then(result => commit('AddCustomer',result))\n  .catch(error => console.log('error', error));\n\n\n\n})\n.catch(error => console.log('error', error));\n\n\n\n},\n\n\n    //UPDATE A CUSTOMER\n\n    async updateCustomer({commit}, customer){\n\n\n    var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar raw = JSON.stringify({\n  \"firstname\": customer.firstname,\n  \"lastname\": customer.lastname,\n  \"phone\": customer.phone,\n  \"email\": customer.email,\n  \"street_number\": customer.street_number,\n  \"street_name\": customer.street_name,\n  \"zip_code\": customer.zip_code,\n  \"city\": customer.city,\n  \"route_to_door\": customer.route_to_door,\n  \"birthday\": customer.birthday,\n  \"special_note\": customer.special_note,\n});\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(`http://localhost:8000/api/customers/${customer.id}`, requestOptions)\n  .then(response => response.text())\n  .then(result => commit('UpdateCustomer',result))\n  .catch(error => console.log('error', error));\n\n}, \n\n    //DELETE A CUSTOMER\n\n\n    async DeleteCustomer({commit}, id){\n\n\n    var myHeaders = new Headers();\n\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar requestOptions = {\n  method: 'DELETE',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(`http://localhost:8000/api/customers/${id}`, requestOptions)\n  .then(response => response.json())\n  .then(result => commit('DeleteCustomer',result))\n  .catch(error => console.log('error', error));\n},\n/* \n//GET COORDS FROM CUSTOMER ADDRESS\n\nasync fetchCords({commit}, customer){\n  var myHeaders = new Headers();\n\n  myHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nJSON.stringify({\n  \"street_number\": customer.street_number,\n  \"street_name\": customer.street_name,\n  \"zip_code\": customer.zip_code,\n  \"city\": customer.city,\n\n});\n\nvar requestOptions = {\n  method: 'GET',\n  redirect: 'follow'\n};\n\nfetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${customer.street_number}+${customer.street_name},+${customer.city}&key=AIzaSyCuhftDeP8710rA7n7ckpcrFguEAX-BsjA`, requestOptions)\n  .then(response => response.json())\n  .then(result => commit('fetchCords',result))\n  .catch(error => console.log('error', error));\n\n} */\n\n}\n\nconst mutations= {\n\n\nfetchAllCustomers:(state,customers)=>(state.customers = customers),\nCustomerById:(state,CustomerById)=>(state.CustomerById = CustomerById),\nAddCustomer:(state,NewCustomer)=>(state.NewCustomer = NewCustomer),\nDeleteCustomer: (state,EraseCustomer)=>(state.EraseCustomer = EraseCustomer),\nUpdateCustomer: (state,EditCustomer)=>(state.EditCustomer = EditCustomer),\nfetchCords: (state,getCords)=>(state.getCords = getCords),\n\n\n\n\n}\n\n\n\n\nexport default{\n    state,\n    getters,\n    actions,\n    mutations,\n}"]}]}
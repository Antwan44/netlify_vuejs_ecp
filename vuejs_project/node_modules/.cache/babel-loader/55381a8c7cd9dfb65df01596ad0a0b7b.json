{"remainingRequest":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/babel-loader/lib/index.js!/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/eslint-loader/index.js??ref--13-0!/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/src/store/modules/Task.js","dependencies":[{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/src/store/modules/Task.js","mtime":1597940432939},{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/antwan/Rendu/netlify_vuejs_ecp/vuejs_project/src/store/modules/Task.js"],"names":["token","window","localStorage","getItem","state","tasks","TaskById","NewTask","EraseTask","EditTask","UserTasks","getters","infoTaskById","getAllTasks","getNewTask","getEraseTask","getEditTask","getUserTasks","actions","fetchTaskById","id","commit","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","catch","error","console","log","fetchAllTasks","addTask","obj","formdata","FormData","service","start","end","special_note","customer_id","employee_id","body","updateTask","task","raw","JSON","stringify","text","DeleteTask","fetchUserTasks","mutations","AddTask","UpdateTask"],"mappings":"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","sourcesContent":["const token = window.localStorage.getItem('token') || \"\";\n\n\nconst state= {\n\n    tasks:[],\n    TaskById:[],\n    NewTask: [],\n    EraseTask: [],\n    EditTask: [],\n    UserTasks\n\n}\n\nconst getters= {\n\n\n    infoTaskById:(state) =>(state.TaskById),\n    getAllTasks:(state)=> (state.tasks),\n    getNewTask:(state)=> (state.NewTask),\n    getEraseTask:(state)=> (state.EraseTask),\n    getEditTask:(state)=>(state.EditTask),\n    getUserTasks:(state)=>(state.UserTasks)\n}\n\nconst actions= {\n\n\n// FETCH TASK BY ID\nasync fetchTaskById({commit},id){\n              var myHeaders = new Headers();\n              myHeaders.append(\"Authorization\", `Bearer ${token}`);\n  \n              var requestOptions = {\n              method: 'GET',\n              headers: myHeaders,\n              \n              redirect: 'follow'\n              };\n  \n              fetch(`https://serene-plateau-70469.herokuapp.com/api/tasks/${id}`, requestOptions)\n              .then(response => response.json())\n              .then(result => {\n                commit('TaskById',result);\n\n              })\n              .catch(error => console.log('error', error));\n                  },\n\n\n    //FETCH ALL TASKS\n async fetchAllTasks({commit}){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        \n        redirect: 'follow'\n        };\n\n        fetch(\"https://serene-plateau-70469.herokuapp.com/api/tasks\", requestOptions)\n        .then(response => response.json())\n        .then(result => commit('fetchAllTasks',result))\n        .catch(error => console.log('error', error));\n            },\n\n    //ADD A TASK\n    async addTask({commit}, obj){\n\n        var myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar formdata = new FormData();\nformdata.append(\"service\", obj.service);\nformdata.append(\"start\", obj.start);\nformdata.append(\"end\", obj.end);\nformdata.append(\"special_note\", obj.special_note);\nformdata.append(\"customer_id\", obj.customer_id);\nformdata.append(\"employee_id\", obj.employee_id);\n\nvar requestOptions = {\nmethod: 'POST',\nheaders: myHeaders,\nbody: formdata,\nredirect: 'follow'\n};\n\nfetch(\"https://serene-plateau-70469.herokuapp.com/api/tasks\", requestOptions)\n.then(response => response.json())\n.then(result => commit('AddTask',result))\n.catch(error => console.log('error', error));\n},\n\n\n    //UPDATE A TASK\n\n    async updateTask({commit}, task){\n\n\n    var myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar raw = JSON.stringify({\n    \"service\": task.service,\n    \"start\": task.start,\n    \"end\": task.end,\n    \"special_note\": task.special_note,\n    \"customer_id\": task.customer_id,\n    \"employee_id\": task.employee_id,\n});\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(`https://serene-plateau-70469.herokuapp.com/api/tasks/${task.id}`, requestOptions)\n  .then(response => response.text())\n  .then(result => commit('UpdateTask',result))\n  .catch(error => console.log('error', error));\n\n},\n\n    //DELETE AN TASK\n\n\n    async DeleteTask({commit}, id){\n\n\n    var myHeaders = new Headers();\n\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar requestOptions = {\n  method: 'DELETE',\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(`https://serene-plateau-70469.herokuapp.com/api/tasks/${id}`, requestOptions)\n  .then(response => response.json())\n  .then(result => commit('DeleteTask',result))\n  .catch(error => console.log('error', error));\n},\n\n\n    //FETCH ALL TASKS FROM USER\n\n    async fetchUserTasks({commit}){\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n      var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      \n      redirect: 'follow'\n      };\n\n      fetch(\"https://serene-plateau-70469.herokuapp.com/api/tasks/user\", requestOptions)\n      .then(response => response.json())\n      .then(result => commit('fetchUserTasks',result))\n      .catch(error => console.log('error', error));\n          },\n\n\n\n}\n\nconst mutations= {\n\n\nfetchAllTasks:(state,tasks)=>(state.tasks = tasks),\nTaskById:(state,TaskById)=>(state.TaskById = TaskById),\nAddTask:(state,NewTask)=>(state.NewTask = NewTask),\nDeleteTask: (state,EraseTask)=>(state.EraseTask = EraseTask),\nUpdateTask: (state,EditTask)=>(state.EditTask = EditTask),\nfetchUserTasks: (state,UserTasks)=>(state.UserTasks = UserTasks)\n\n}\n\n\n\n\nexport default{\n    state,\n    getters,\n    actions,\n    mutations,\n}"]}]}